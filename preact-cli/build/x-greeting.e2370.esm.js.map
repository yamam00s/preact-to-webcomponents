{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/preact/src/util.js","webpack:///../node_modules/preact/src/create-element.js","webpack:///../node_modules/preact/src/component.js","webpack:///../node_modules/preact/src/diff/children.js","webpack:///../node_modules/preact/src/diff/props.js","webpack:///../node_modules/preact/src/diff/index.js","webpack:///../node_modules/preact/src/render.js","webpack:///../node_modules/preact/src/clone-element.js","webpack:///../node_modules/preact-custom-element/src/index.js","webpack:///../node_modules/preact/src/options.js","webpack:///../node_modules/preact/src/constants.js","webpack:///../node_modules/preact/src/diff/catch-error.js","webpack:///./components/Greeting.tsx"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","h","u","parentNode","removeChild","y","f","arguments","length","children","defaultProps","type","props","ref","__k","__","__b","__e","__d","__c","__h","constructor","__v","vnode","k","b","this","context","g","indexOf","base","w","push","x","__r","debounceRendering","e","sort","shift","__P","L","__n","ownerSVGElement","M","P","a","_","v","C","$","A","nextSibling","q","O","appendChild","insertBefore","I","setProperty","test","T","style","cssText","replace","toLowerCase","slice","addEventListener","z","j","removeEventListener","removeAttribute","setAttribute","event","S","H","contextType","__E","render","B","sub","state","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","N","diffed","some","localName","nodeType","document","createTextNode","createElementNS","createElement","is","data","childNodes","dangerouslySetInnerHTML","attributes","__html","innerHTML","checked","current","unmount","componentWillUnmount","D","firstChild","E","F","keys","CustomEvent","detail","bubbles","cancelable","dispatchEvent","_vdom","_props","slot","nodeName","_vdomComponent","hasAttribute","_root","toUpperCase","_listener","stopPropagation","Array","isArray","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","Promise","then","resolve","setTimeout","Reflect","construct","HTMLElement","shadow","attachShadow","connectedCallback","attributeChangedCallback","disconnectedCallback","observedAttributes","propTypes","set","customElements","define","tagName","displayName","register","Greeting"],"mappings":"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","file":"x-greeting.e2370.esm.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"ydxE\");\n","import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\nimport { isArray } from '../util';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getLastDom(oldParentVNode).nextSibling;\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 1\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {import('../internal').VNode} vnode\n */\nfunction getLastDom(vnode) {\n\tif (vnode.type == null || typeof vnode.type === 'string') {\n\t\treturn vnode._dom;\n\t}\n\n\tif (vnode._children) {\n\t\tfor (let i = vnode._children.length - 1; i >= 0; i--) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child) {\n\t\t\t\tlet lastDom = getLastDom(child);\n\t\t\t\tif (lastDom) {\n\t\t\t\t\treturn lastDom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' &&\n\t\t\tname !== 'height' &&\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname !== 'rowSpan' &&\n\t\t\tname !== 'colSpan' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name[4] === '-')) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// In cases of bailing due to strict-equality we have to reset force as well\n\t\t\t\t\tc._force = false;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tisArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type && vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] === undefined && defaultProps !== undefined) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n","import { h, cloneElement, render, hydrate } from 'preact';\n\nexport default function register(Component, tagName, propNames, options) {\n\tfunction PreactElement() {\n\t\tconst inst = Reflect.construct(HTMLElement, [], PreactElement);\n\t\tinst._vdomComponent = Component;\n\t\tinst._root =\n\t\t\toptions && options.shadow ? inst.attachShadow({ mode: 'open' }) : inst;\n\t\treturn inst;\n\t}\n\tPreactElement.prototype = Object.create(HTMLElement.prototype);\n\tPreactElement.prototype.constructor = PreactElement;\n\tPreactElement.prototype.connectedCallback = connectedCallback;\n\tPreactElement.prototype.attributeChangedCallback = attributeChangedCallback;\n\tPreactElement.prototype.disconnectedCallback = disconnectedCallback;\n\n\tpropNames =\n\t\tpropNames ||\n\t\tComponent.observedAttributes ||\n\t\tObject.keys(Component.propTypes || {});\n\tPreactElement.observedAttributes = propNames;\n\n\t// Keep DOM properties and Preact props in sync\n\tpropNames.forEach((name) => {\n\t\tObject.defineProperty(PreactElement.prototype, name, {\n\t\t\tget() {\n\t\t\t\treturn this._vdom.props[name];\n\t\t\t},\n\t\t\tset(v) {\n\t\t\t\tif (this._vdom) {\n\t\t\t\t\tthis.attributeChangedCallback(name, null, v);\n\t\t\t\t} else {\n\t\t\t\t\tif (!this._props) this._props = {};\n\t\t\t\t\tthis._props[name] = v;\n\t\t\t\t\tthis.connectedCallback();\n\t\t\t\t}\n\n\t\t\t\t// Reflect property changes to attributes if the value is a primitive\n\t\t\t\tconst type = typeof v;\n\t\t\t\tif (\n\t\t\t\t\tv == null ||\n\t\t\t\t\ttype === 'string' ||\n\t\t\t\t\ttype === 'boolean' ||\n\t\t\t\t\ttype === 'number'\n\t\t\t\t) {\n\t\t\t\t\tthis.setAttribute(name, v);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t});\n\n\treturn customElements.define(\n\t\ttagName || Component.tagName || Component.displayName || Component.name,\n\t\tPreactElement\n\t);\n}\n\nfunction ContextProvider(props) {\n\tthis.getChildContext = () => props.context;\n\t// eslint-disable-next-line no-unused-vars\n\tconst { context, children, ...rest } = props;\n\treturn cloneElement(children, rest);\n}\n\nfunction connectedCallback() {\n\t// Obtain a reference to the previous context by pinging the nearest\n\t// higher up node that was rendered with Preact. If one Preact component\n\t// higher up receives our ping, it will set the `detail` property of\n\t// our custom event. This works because events are dispatched\n\t// synchronously.\n\tconst event = new CustomEvent('_preact', {\n\t\tdetail: {},\n\t\tbubbles: true,\n\t\tcancelable: true,\n\t});\n\tthis.dispatchEvent(event);\n\tconst context = event.detail.context;\n\n\tthis._vdom = h(\n\t\tContextProvider,\n\t\t{ ...this._props, context },\n\t\ttoVdom(this, this._vdomComponent)\n\t);\n\t(this.hasAttribute('hydrate') ? hydrate : render)(this._vdom, this._root);\n}\n\nfunction toCamelCase(str) {\n\treturn str.replace(/-(\\w)/g, (_, c) => (c ? c.toUpperCase() : ''));\n}\n\nfunction attributeChangedCallback(name, oldValue, newValue) {\n\tif (!this._vdom) return;\n\t// Attributes use `null` as an empty value whereas `undefined` is more\n\t// common in pure JS components, especially with default parameters.\n\t// When calling `node.removeAttribute()` we'll receive `null` as the new\n\t// value. See issue #50.\n\tnewValue = newValue == null ? undefined : newValue;\n\tconst props = {};\n\tprops[name] = newValue;\n\tprops[toCamelCase(name)] = newValue;\n\tthis._vdom = cloneElement(this._vdom, props);\n\trender(this._vdom, this._root);\n}\n\nfunction disconnectedCallback() {\n\trender((this._vdom = null), this._root);\n}\n\n/**\n * Pass an event listener to each `<slot>` that \"forwards\" the current\n * context value to the rendered child. The child will trigger a custom\n * event, where will add the context value to. Because events work\n * synchronously, the child can immediately pull of the value right\n * after having fired the event.\n */\nfunction Slot(props, context) {\n\tconst ref = (r) => {\n\t\tif (!r) {\n\t\t\tthis.ref.removeEventListener('_preact', this._listener);\n\t\t} else {\n\t\t\tthis.ref = r;\n\t\t\tif (!this._listener) {\n\t\t\t\tthis._listener = (event) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tevent.detail.context = context;\n\t\t\t\t};\n\t\t\t\tr.addEventListener('_preact', this._listener);\n\t\t\t}\n\t\t}\n\t};\n\treturn h('slot', { ...props, ref });\n}\n\nfunction toVdom(element, nodeName) {\n\tif (element.nodeType === 3) return element.data;\n\tif (element.nodeType !== 1) return null;\n\tlet children = [],\n\t\tprops = {},\n\t\ti = 0,\n\t\ta = element.attributes,\n\t\tcn = element.childNodes;\n\tfor (i = a.length; i--; ) {\n\t\tif (a[i].name !== 'slot') {\n\t\t\tprops[a[i].name] = a[i].value;\n\t\t\tprops[toCamelCase(a[i].name)] = a[i].value;\n\t\t}\n\t}\n\n\tfor (i = cn.length; i--; ) {\n\t\tconst vnode = toVdom(cn[i], null);\n\t\t// Move slots correctly\n\t\tconst name = cn[i].slot;\n\t\tif (name) {\n\t\t\tprops[name] = h(Slot, { name }, vnode);\n\t\t} else {\n\t\t\tchildren[i] = vnode;\n\t\t}\n\t}\n\n\t// Only wrap the topmost node with a slot\n\tconst wrappedChildren = nodeName ? h(Slot, null, children) : children;\n\treturn h(nodeName || element.nodeName.toLowerCase(), props, wrappedChildren);\n}\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { h } from 'preact';\nimport register from 'preact-custom-element';\n\nconst Greeting = ({ name = 'World' }) => (\n  <p>Hello, {name}!</p>\n);\n\nregister(Greeting, 'x-greeting', ['name']);\n"],"sourceRoot":""}